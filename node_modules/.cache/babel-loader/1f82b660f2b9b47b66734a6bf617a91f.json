{"remainingRequest":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/babel-loader/lib/index.js!/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/src/modules/auth/views/RegistrarPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/src/modules/auth/views/RegistrarPage.vue","mtime":1661169290000},{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/babel.config.js","mtime":1661169290000},{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/cache-loader/dist/cjs.js","mtime":1661188924946},{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/babel-loader/lib/index.js","mtime":1661188927724},{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/cache-loader/dist/cjs.js","mtime":1661188924946},{"path":"/Users/alexandre/Documents/projeto-saks-developer/SAKS-main/biblioteca-front/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661188935383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgeyByZWdpc3RyYXIgfSBmcm9tICdAL21vZHVsZXMvYXV0aC9hdXRoLnNlcnZpY2UnOwppbXBvcnQgeyB0b2FzdEVycm9yIH0gZnJvbSAnQC9zZXJ2aWNlcy90b2FzdFNlcnZpY2UnOwppbXBvcnQgeyBnb1RvQmFzZVBhZ2UgfSBmcm9tICdAL3JvdXRlci9yb3V0ZS5zZXJ2aWNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdCaWJsaW90ZWNhUmVnaXN0cmFyUGFnZScsCiAgcHJvdmlkZTogZnVuY3Rpb24gcHJvdmlkZSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdmFyIGluZm9SZWdpc3RyYXJWbSA9IHt9OwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGluZm9SZWdpc3RyYXJWbSwgJ2luZm8nLCB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBfdGhpcy5pbmZvOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiB7CiAgICAgIGluZm9SZWdpc3RyYXJWbTogaW5mb1JlZ2lzdHJhclZtCiAgICB9OwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluZm86IHsKICAgICAgICBub21lOiBudWxsLAogICAgICAgIGVtYWlsOiBudWxsLAogICAgICAgIHNlbmhhOiBudWxsLAogICAgICAgIGNvbmZpcm1hcl9zZW5oYTogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25SZWdpc3RyYXI6IGZ1bmN0aW9uIG9uUmVnaXN0cmFyKCkgewogICAgICByZWdpc3RyYXIodGhpcy5pbmZvKS50aGVuKGdvVG9CYXNlUGFnZSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGlmIChlcnIucmVzcG9uc2UuZGF0YS5tZXNzYWdlID09PSAnRU1BSUxfRFVQTElDQURPJykgewogICAgICAgICAgdG9hc3RFcnJvcignRS1tYWlsIGR1cGxpY2FkbycpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdmFsaWRhdGVVc3VhcmlvOiBmdW5jdGlvbiB2YWxpZGF0ZVVzdWFyaW8oKSB7CiAgICAgIHZhciBzcGVjaWFsQ2hhcnMgPSAhISh0aGlzLmluZm8uc2VuaGEubWF0Y2goL1tgIUAjJCVeJiooKV8rXC09W1xde307JzoiXFx8LC48Pi8/fl0rLykgJiYgdGhpcy5pbmZvLnNlbmhhLm1hdGNoKC9cZCsvKSk7CgogICAgICBpZiAoIXNwZWNpYWxDaGFycykgewogICAgICAgIHRvYXN0RXJyb3IoJ0Egc2VuaGEgZGV2ZSBjb250ZXIgY2FyYWN0ZXJlcyBlc3BlY2lhaXMgZSBuw7ptZXJvcycpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaW5mby5zZW5oYSAhPT0gdGhpcy5pbmZvLmNvbmZpcm1hcl9zZW5oYSkgewogICAgICAgIHRvYXN0RXJyb3IoJ0FzIHNlbmhhcyBuw6NvIHPDo28gaWd1YWlzJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5vblJlZ2lzdHJhcigpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;AAkGA;AACA;AACA;AAEA;EACAA,+BADA;EAEAC,OAFA,qBAEA;IAAA;;IACA;IACAC;MACAC;QAAA;MAAA;IADA;IAGA;MAAAC;IAAA;EACA,CARA;EASAC,IATA,kBASA;IACA;MACAC;QACAC,UADA;QAEAC,WAFA;QAGAC,WAHA;QAIAC;MAJA;IADA;EAQA,CAlBA;EAmBAC;IACAC,WADA,yBACA;MACAC,qBACAC,IADA,CACAC,YADA,EAEAC,KAFA,CAEA;QACA;UACAC;QACA;MACA,CANA;IAOA,CATA;IAUAC,eAVA,6BAUA;MACA;;MAEA;QACAD;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACA;MACA;IACA;EApBA;AAnBA","names":["name","provide","Object","get","infoRegistrarVm","data","info","nome","email","senha","confirmar_senha","methods","onRegistrar","registrar","then","goToBasePage","catch","toastError","validateUsuario"],"sourceRoot":"src/modules/auth/views","sources":["RegistrarPage.vue"],"sourcesContent":["<template>\n  <el-main>\n    <biblioteca-row>\n      <biblioteca-col\n        class=\"text-center mb-3\"\n        :sm=\"12\"\n        :offset=\"6\">\n        <img\n          class=\"mb-3\"\n          src=\"@/assets/images/logo.png\"\n          alt=\"\"\n          width=\"80\" />\n        <biblioteca-header size=\"md\">Bem-vindo!</biblioteca-header>\n        <small>Por favor, informe os seus dados</small>\n      </biblioteca-col>\n    </biblioteca-row>\n    <biblioteca-row>\n      <biblioteca-col\n        class=\"text-center mb-3\"\n        :sm=\"12\"\n        :offset=\"6\">\n        <biblioteca-form v-slot=\"{ validate }\" :submit=\"validateUsuario\">\n          <biblioteca-row>\n            <biblioteca-col\n              class=\"text-center mb-3\">\n              <biblioteca-input\n                v-model=\"info.nome\"\n                type=\"text\"\n                name=\"nome\"\n                rules=\"required\"\n                placeholder=\"Nome\"\n                :focus=\"true\" />\n            </biblioteca-col>\n          </biblioteca-row>\n          <biblioteca-row>\n            <biblioteca-col\n              class=\"text-center mb-3\">\n              <biblioteca-input\n                v-model=\"info.email\"\n                type=\"email\"\n                name=\"e-mail\"\n                rules=\"required|email\"\n                placeholder=\"E-mail\" />\n            </biblioteca-col>\n          </biblioteca-row>\n          <biblioteca-row>\n            <biblioteca-col\n              class=\"text-center mb-3\"\n              :sm=\"12\">\n              <biblioteca-input\n                v-model=\"info.senha\"\n                name=\"senha\"\n                type=\"password\"\n                rules=\"required|min:6\"\n                placeholder=\"Senha*\" />\n            </biblioteca-col>\n            <biblioteca-col\n              class=\"text-center mb-3\"\n              :sm=\"12\">\n              <biblioteca-input\n                v-model=\"info.confirmar_senha\"\n                name=\"confirmar senha\"\n                type=\"password\"\n                rules=\"required|min:6\"\n                placeholder=\"Confirmar senha*\" />\n            </biblioteca-col>\n          </biblioteca-row>\n          <biblioteca-row>\n            <biblioteca-col\n              class=\"text-center mb-3\">\n              <biblioteca-button\n                native-type=\"submit\"\n                class=\"btn btn-dark\"\n                @click=\"validate\">\n                Confirmar\n              </biblioteca-button>\n            </biblioteca-col>\n          </biblioteca-row>\n        </biblioteca-form>\n      </biblioteca-col>\n    </biblioteca-row>\n    <biblioteca-row>\n      <biblioteca-col\n        class=\"text-center mb-3\"\n        :sm=\"12\"\n        :offset=\"6\">\n        <div class=\"d-grid text-center\">\n          <p>\n            Já possui conta?\n            <router-link class=\"color--primary\" to=\"/login\">Login</router-link>\n          </p>\n        </div>\n      </biblioteca-col>\n    </biblioteca-row>\n  </el-main>\n</template>\n\n<script>\nimport { registrar } from '@/modules/auth/auth.service';\nimport { toastError } from '@/services/toastService';\nimport { goToBasePage } from '@/router/route.service';\n\nexport default {\n  name: 'BibliotecaRegistrarPage',\n  provide() {\n    const infoRegistrarVm = {};\n    Object.defineProperty(infoRegistrarVm, 'info', {\n      get: () => this.info,\n    });\n    return { infoRegistrarVm };\n  },\n  data() {\n    return {\n      info: {\n        nome: null,\n        email: null,\n        senha: null,\n        confirmar_senha: null,\n      },\n    };\n  },\n  methods: {\n    onRegistrar() {\n      registrar(this.info)\n        .then(goToBasePage)\n        .catch(err => {\n          if (err.response.data.message === 'EMAIL_DUPLICADO') {\n            toastError('E-mail duplicado');\n          }\n        });\n    },\n    validateUsuario() {\n      const specialChars = !!(this.info.senha.match(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]+/) && this.info.senha.match(/\\d+/));\n\n      if (!specialChars) {\n        toastError('A senha deve conter caracteres especiais e números');\n      } else if (this.info.senha !== this.info.confirmar_senha) {\n        toastError('As senhas não são iguais');\n      } else {\n        this.onRegistrar();\n      }\n    },\n  },\n};\n</script>\n<style scoped>\nspan {\n  width: 620px;\n}\nbutton {\n  width:150px;\n}\n</style>\n"]}]}